#include <iostream>

using namespace std;

int main()
{
	int N;
	cout << "Выбор задачи - ";
	cin >> N;
	if (N == 1)
	{
		int a, b, i1;
	    cout << "1. Даны целые положительные числа A и B (A < B). Вывести все целые числа от A до B включительно; при этом каждое число должно выводиться столько раз, каково его значение (например, число 3 выводится 3 раза)."<< endl;
		cout << "Введите А:";
		cin >> a;
		cout << "Введите В:";
		cin >> b;
		for (i1 = a; a <= b; a++)
		{
			for (int i2 = 0; i2 < a; i2++)
			cout << a << endl;
		}
	}
	if (N == 2)
	{
		int a, b, i = 0;
		cout << "2. Даны положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Не используя операции умножения и деления, найти длину незанятой части отрезка A."<< endl;
		cout << "Введите A:";
		cin >> a;
		cout << "Введите В:";
		cin >> b;
		while (a > b) 
		{
			a -= b;
			i++;
		}
		cout << "Количество отрезков:" << i << endl;
		cout << "Незанятая часть:" << a;
	}
	if (N == 3)
	{
		int n, k = 0, x = 0;
		cout << "Вывести наименьшее из целых чисел K, для которых сумма 1 + 2 +...+ K будет больше или равна N, и саму эту сумму" << endl;
		cout << "Введите N:";
		cin >> n;
		while (x <= n) 
		{
			k++;
			x += k;
		}
		cout << "Сумма K:" << k << endl;
		cout << "Наименьшее число:" << x;
	} 
	if (N == 4) 
	{
		int k = 0;
		float s=1000, p;
		cout << "4. Начальный вклад в банке равен 1000 руб. Через каждый месяц размер вклада увеличивается на P процентов от имеющейся суммы (P — вещественное число, 0 < P < 25). По данному P определить, через сколько месяцев размер вклада превысит 1100 руб., и вывести найденное количество месяцев K (целое число) и итоговый размер вклада S (вещественное число)."<< endl;
		cout << "Введите процент под который оставляем вклад:";
		cin >> p;
		while (s <= 1100) 
		{
			++k;
			s += s * (p / 100);
		}
		cout << "на " << k << " месяц ";
		cout << "итоговый размер вклада будет:" << s;
	}
	if (N == 5)
	{
		int a, b;
		cout << "5. Даны целые положительные числа A и B. Найти их наибольший общий делитель (НОД), используя алгоритм Евклида"<< endl;
		cout << "Введите A:";
		cin >> a;
		cout << "Введите B:";
		cin >> b;
		while (a != b) 
		{
			if (a > b) 
			{
				a = a - b;
			}
			else 
			{
				b = b - a;
			}
		}
		cout << "НОД:" << a;
	}
	if (N == 6)
	{ 
		int n, f1 = 1, f2 = 1, f = 0, k = 2;
		cout << "6. Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK. Найти целое число K — порядковый номер числа Фибоначчи N."<< endl
		cout << "Введите целое N(>1):";
		cin >> n;
		while (f < n) 
		{
			k++;
			f = f2 + f1;
			f2 = f1;
			f1 = f;
		}
		cout << "Порядковый номер числа N:" << k;
	}
}
